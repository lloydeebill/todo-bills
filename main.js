(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>s});var a=t(354),o=t.n(a),r=t(314),i=t.n(r)()(o());i.push([n.id,"\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: Helvetica, 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\n.container {\n  display: grid;\n  grid-template-columns: 1fr 8fr;\n  grid-template-rows: auto 1fr;\n  min-height: 100vh;\n}\n\n\n/*header css*/\n\n.header {\n  background-color: white;\n  display: grid;\n  grid-column: 2/9;\n  height: 100px;\n  box-shadow: 0 5px 10px rgba(0,0,0,0.2);\n  margin: 15px;\n  border-radius: 10px;;\n}\n\n.user-banner {\n  display: flex;\n  padding: 30px;\n  gap: 50px;\n}\n\n.user-nav {\n  display: flex;\n  gap: 20px;\n}\n\n.user-nav > li > button {\n  background-color: rgba(221, 235, 229, 0.86);\n  border: none;\n  border-radius: 30px;\n  width: 150px;\n  height: 50px;\n  color: black;\n  font-weight: bold;\n}\n\n.user-icon {\n  color: black;\n  width: 50px;\n}\n\n.user-id {\n  display: flex;\n  gap: 20px;\n}\n\n\n\n/* dashboard css */\n.user-dashboard {\n  background-color: rgba(206, 214, 210, 0.945);\n  grid-row: 1/6;\n  display: flex;\n  flex-direction: column;\n  color: black;\n  margin: 15px;\n  border-radius: 10px;\n  width: 300px;\n}\n\n.user-dashboard > h1{\n  align-self: center;\n  padding: 20px;\n  font-size: 50px;\n}\n\n.user-dashboard-menu {\n  margin-left: 60px;\n}\n\n\n.user-tasks > li , .user-lists > li {\n  font-size: 20px;\n  margin: 20px;\n}\n\n.user-tasks > h2 , .user-lists > h2  {\n  font-size: 25px;\n}\n\n.user-today , .user-home , .user-calendar , .user-sticky-wall { \n  cursor: pointer;\n}\n\n\n/*user content*/ \n\n.user-content {\n  margin: 20px;\n}\n\n.content-title {\n  margin-bottom: 20px;\n}\n\n\n\n/* Modal styles */\n\n.task-modal , .sticky-modal , .schedule-modal {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n.task-modal-content , .sticky-modal-content , .schedule-modal-content{\n  display: flex;\n  position: absolute;\n  left: 40%;\n  top: 20%;\n}\n\n.modal-content > div {\n  padding: 20px;\n  margin: 12px; \n}\n\n.close-button {\n  font-size: 25px;\n  margin: 2px 10px;\n  margin-right: 20px;\n  cursor: pointer;\n}\n\n.form-content { \n  background-color: whitesmoke;\n  display: flex;\n  flex-direction: column;\n  width: 450px;\n  height: 300px;\n  border-radius: 15px;\n  margin: 12px;\n  padding: 10px;\n}\n\n\n.form-content > label , .form-content > input , .form-content > button {\n  margin: 10px 10px;\n  margin-left: 30px;\n  margin-right: 30px;\n}\n\nform > .add-button {\n  width: 100px;\n  align-self: center;\n}\n\nform > input {\n  padding: 5px;\n}\n\n.form-title {\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  gap: 120px;\n  \n}\n\n\n\n/*today section*/\n\n.today-list-container { \n  margin: 5px;\n}\n\n/* task element */\n\n.task-element {\n  border-top: 2px solid rgba(206, 214, 210, 0.945);\n  display: flex;\n  gap: 50px;\n  align-items: center;\n  padding: 20px;\n\n}\n\n.task-element > p {\n  font-size: 20px;\n}\n\n.task-element > label {\n  padding: 15px;\n}\n\n.delete-button {\n  width: 20px; \n  height: 20px; \n  cursor: pointer;\n}\n\n\n/* sticky element */\n\n.sticky-modal-content > .form-content{\n  width: 500px;\n  height: 550px;\n}\n\n.sticky-list-container {\n  display: grid;\n  gap: 40px;\n  grid-template-columns: repeat(5, 2fr);\n}\n\n.sticky-element {\n\n  background-color: rgb(255, 231, 97);\n  border-radius: 10px;\n  padding: 20px;\n  min-height: 300px;\n\n}\n\n.sticky-detail {\n  margin: 10px 30px;\n  padding: 5px;\n  height: 200px;\n\n}\n\n.color-picker {\n  display: flex;\n  gap: 20px;\n  justify-content: flex-start;\n  margin: 10px 30px;\n}\n\n.color-option {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  cursor: pointer;\n  border: 2px solid transparent;\n}\n\n.color-option.selected {\n  border: 2px solid grey;\n}\n\n\n\n\n\n\n/*calendar*/\n\n.calendar-month{\n  display: grid;\n  gap: 40px;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n\n}\n\n.day-cell {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  border: 1px solid black;\n  height: 200px;\n}\n\n.day-cell > div {\n  display: flex;\n  margin: 10px;\n  gap: 10px;\n}\n\n.day-cell > div > span{\n  font-size: 20px;\n}\n\n.add-schedule-prompt {\n  align-self: center;\n  display: block;\n}\n\n.schedule-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody {\n  line-height: 1.5;\n  -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n  display: block;\n  max-width: 100%;\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n  isolation: isolate;\n}\n\n\nli {\n  list-style: none;\n}\n\nhtml {\n  font-family: Helvetica, 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\n.container {\n  display: grid;\n  grid-template-columns: 1fr 8fr;\n  grid-template-rows: auto 1fr;\n  min-height: 100vh;\n}\n\n\n/*header css*/\n\n.header {\n  background-color: white;\n  display: grid;\n  grid-column: 2/9;\n  height: 100px;\n  box-shadow: 0 5px 10px rgba(0,0,0,0.2);\n  margin: 15px;\n  border-radius: 10px;;\n}\n\n.user-banner {\n  display: flex;\n  padding: 30px;\n  gap: 50px;\n}\n\n.user-nav {\n  display: flex;\n  gap: 20px;\n}\n\n.user-nav > li > button {\n  background-color: rgba(221, 235, 229, 0.86);\n  border: none;\n  border-radius: 30px;\n  width: 150px;\n  height: 50px;\n  color: black;\n  font-weight: bold;\n}\n\n.user-icon {\n  color: black;\n  width: 50px;\n}\n\n.user-id {\n  display: flex;\n  gap: 20px;\n}\n\n\n\n/* dashboard css */\n.user-dashboard {\n  background-color: rgba(206, 214, 210, 0.945);\n  grid-row: 1/6;\n  display: flex;\n  flex-direction: column;\n  color: black;\n  margin: 15px;\n  border-radius: 10px;\n  width: 300px;\n}\n\n.user-dashboard > h1{\n  align-self: center;\n  padding: 20px;\n  font-size: 50px;\n}\n\n.user-dashboard-menu {\n  margin-left: 60px;\n}\n\n\n.user-tasks > li , .user-lists > li {\n  font-size: 20px;\n  margin: 20px;\n}\n\n.user-tasks > h2 , .user-lists > h2  {\n  font-size: 25px;\n}\n\n.user-today , .user-home , .user-calendar , .user-sticky-wall { \n  cursor: pointer;\n}\n\n\n/*user content*/ \n\n.user-content {\n  margin: 20px;\n}\n\n.content-title {\n  margin-bottom: 20px;\n}\n\n\n\n/* Modal styles */\n\n.task-modal , .sticky-modal , .schedule-modal {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n.task-modal-content , .sticky-modal-content , .schedule-modal-content{\n  display: flex;\n  position: absolute;\n  left: 40%;\n  top: 20%;\n}\n\n.modal-content > div {\n  padding: 20px;\n  margin: 12px; \n}\n\n.close-button {\n  font-size: 25px;\n  margin: 2px 10px;\n  margin-right: 20px;\n  cursor: pointer;\n}\n\n.form-content { \n  background-color: whitesmoke;\n  display: flex;\n  flex-direction: column;\n  width: 450px;\n  height: 300px;\n  border-radius: 15px;\n  margin: 12px;\n  padding: 10px;\n}\n\n\n.form-content > label , .form-content > input , .form-content > button {\n  margin: 10px 10px;\n  margin-left: 30px;\n  margin-right: 30px;\n}\n\nform > .add-button {\n  width: 100px;\n  align-self: center;\n}\n\nform > input {\n  padding: 5px;\n}\n\n.form-title {\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  gap: 120px;\n  \n}\n\n\n\n/*today section*/\n\n.today-list-container { \n  margin: 5px;\n}\n\n/* task element */\n\n.task-element {\n  border-top: 2px solid rgba(206, 214, 210, 0.945);\n  display: flex;\n  gap: 50px;\n  align-items: center;\n  padding: 20px;\n\n}\n\n.task-element > p {\n  font-size: 20px;\n}\n\n.task-element > label {\n  padding: 15px;\n}\n\n.delete-button {\n  width: 20px; \n  height: 20px; \n  cursor: pointer;\n}\n\n\n/* sticky element */\n\n.sticky-modal-content > .form-content{\n  width: 500px;\n  height: 550px;\n}\n\n.sticky-list-container {\n  display: grid;\n  gap: 40px;\n  grid-template-columns: repeat(5, 2fr);\n}\n\n.sticky-element {\n\n  background-color: rgb(255, 231, 97);\n  border-radius: 10px;\n  padding: 20px;\n  min-height: 300px;\n\n}\n\n.sticky-detail {\n  margin: 10px 30px;\n  padding: 5px;\n  height: 200px;\n\n}\n\n.color-picker {\n  display: flex;\n  gap: 20px;\n  justify-content: flex-start;\n  margin: 10px 30px;\n}\n\n.color-option {\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  cursor: pointer;\n  border: 2px solid transparent;\n}\n\n.color-option.selected {\n  border: 2px solid grey;\n}\n\n\n\n\n\n\n/*calendar*/\n\n.calendar-month{\n  display: grid;\n  gap: 40px;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n\n}\n\n.day-cell {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  border: 1px solid black;\n  height: 200px;\n}\n\n.day-cell > div {\n  display: flex;\n  margin: 10px;\n  gap: 10px;\n}\n\n.day-cell > div > span{\n  font-size: 20px;\n}\n\n.add-schedule-prompt {\n  align-self: center;\n  display: block;\n}\n\n.schedule-content {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}"],sourceRoot:""}]);const s=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);a&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var r={},i=[],s=0;s<n.length;s++){var A=n[s],c=a.base?A[0]+a.base:A[0],l=r[c]||0,d="".concat(c," ").concat(l);r[c]=l+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,a);a.byIndex=s,e.splice(s,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var r=a(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var s=t(r[i]);e[s].references--}for(var A=a(n,o),c=0;c<r.length;c++){var l=t(r[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=A}}},659:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,o&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var o=e[a];if(void 0!==o)return o.exports;var r=e[a]={id:a,exports:{}};return n[a](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=a[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0;var a=t(72),o=t.n(a),r=t(825),i=t.n(r),s=t(659),A=t.n(s),c=t(56),l=t.n(c),d=t(540),p=t.n(d),u=t(113),m=t.n(u),E=t(208),h={};h.styleTagTransform=m(),h.setAttributes=l(),h.insert=A().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=p(),o()(E.A,h),E.A&&E.A.locals&&E.A.locals;const g=t.p+"2ef861692ad966dddf72.svg",C=t.p+"f23e16946026a2dfebe8.svg";function y(){const n=document.createElement("img");return n.src=C,n.classList.add("delete-button"),n}class f{constructor(n,e){this.id=Date.now(),this.name=n,this.time=e}}const x=new class{constructor(){this.taskList=this.loadTasks()||[]}addTask(n,e){const t=new f(n,e);this.taskList.push(t),this.saveTasks()}getTaskList(){return this.taskList}deleteTask(n){this.taskList=this.taskList.filter((e=>e.id!==n)),this.saveTasks()}saveTasks(){localStorage.setItem("taskList",JSON.stringify(this.taskList))}loadTasks(){const n=localStorage.getItem("taskList");return n?JSON.parse(n).map((n=>new f(n.name,n.time))):[]}};function b(){const n=document.querySelector(".content-container");n.innerHTML="",n.classList.add("today-list-container"),x.getTaskList().forEach((e=>{const t=function(n){const e=document.createElement("div"),t=document.createElement("label"),a=document.createElement("p"),o=document.createElement("input");t.innerText=n.name,t.setAttribute("for",n.name),a.innerText=n.time,o.type="checkbox",o.id=n.name,o.name=n.name;const r=y();return r.addEventListener("click",(()=>{x.deleteTask(n.id),b()})),e.classList.add("task-element"),e.appendChild(o),e.appendChild(t),e.appendChild(a),e.appendChild(r),e}(e);n.appendChild(t)}))}function k(){const n=document.querySelector(".user-content"),e=document.createElement("h1");e.classList.add("content-title");const t=document.createElement("div");t.classList.add("content-container");const a=(new Date).toLocaleDateString("en-US",{weekday:"long",month:"long",day:"numeric"}),o=document.createElement("h2");o.innerText=`${a}`,e.innerText="Today",n.innerHTML="",n.append(e,o,t),b()}class B{constructor(n,e){this.year=n,this.month=e,this.modal=document.querySelector(".schedule-modal"),this.closeButton=this.modal.querySelector(".close-button"),this.currentDayCell=null,this.initializeFormListener(),this.loadCalendarState()}initializeFormListener(){this.modal.querySelector("#addScheduleForm").addEventListener("submit",(n=>{n.preventDefault(),this.addScheduleCell()})),this.closeButton.addEventListener("click",(()=>{this.modal.style.display="none"}))}generateCalendar(){const n=document.querySelector(".content-container"),e=document.createElement("div");e.classList.add("calendar-month");const t=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];n.innerHTML="";const a=new Date(this.year,this.month,1).getDay(),o=new Date(this.year,this.month+1,0).getDate();for(let e=0;e<a;e++){const e=document.createElement("div");n.appendChild(e)}for(let n=1;n<=o;n++){const a=document.createElement("div");a.innerText=n,a.classList.add("day-cell"),a.setAttribute("data-day",n);const o=new Date(this.year,this.month,n).getDay();a.innerHTML=`<div>\n      <span class="date-number">${n}</span>\n      <span class="day-name">${t[o]}</span>\n      </div>\n      <p class='add-schedule-prompt'>Click to add Schedule</p>`,a.addEventListener("click",(()=>this.showScheduleModal(a))),e.appendChild(a)}n.append(e),this.loadSchedules()}showScheduleModal(n){this.modal.style.display="block",this.currentDayCell=n}addScheduleCell(){const n=this.modal.querySelector("#scheduleName").value,e=document.createElement("div");e.classList.add("schedule-content");const t=document.querySelector(".add-schedule-prompt");t&&(t.style.display="none"),e.innerHTML=`<p>${n}</p>`;const a=y();a.addEventListener("click",(n=>{n.stopPropagation(),this.currentDayCell.removeChild(e),this.saveCalendarState(),0===this.currentDayCell.querySelectorAll(".schedule-content").length&&(t.style.display="block")}));const o=document.createElement("input");o.type="checkbox",o.id=n,o.name=n,o.addEventListener("click",(n=>{n.stopPropagation()})),e.appendChild(o),e.appendChild(a),this.currentDayCell.appendChild(e),this.modal.style.display="none",this.modal.querySelector("#addScheduleForm").reset(),this.saveCalendarState()}saveCalendarState(){const n={};document.querySelectorAll(".day-cell").forEach((e=>{const t=e.getAttribute("data-day"),a=[];e.querySelectorAll(".schedule-content").forEach((n=>{const e=n.querySelector("p").innerText;a.push(e)})),a.length>0&&(n[t]=a)})),localStorage.setItem("calendarState",JSON.stringify(n))}loadCalendarState(){const n=JSON.parse(localStorage.getItem("calendarState"));this.calendarState=n||{}}loadSchedules(){const n=this.calendarState;document.querySelectorAll(".day-cell").forEach((e=>{const t=e.getAttribute("data-day");n[t]&&n[t].forEach((n=>{const t=document.createElement("div");t.classList.add("schedule-content"),t.innerHTML=`<p>${n}</p>`;const a=y();a.addEventListener("click",(n=>{if(n.stopPropagation(),e.removeChild(t),this.saveCalendarState(),0===e.querySelectorAll(".schedule-content").length){const n=e.querySelector(".add-schedule-prompt");n&&(n.style.display="block")}}));const o=document.createElement("input");o.type="checkbox",o.id=n,o.name=n,o.addEventListener("click",(n=>{n.stopPropagation()})),t.appendChild(o),t.appendChild(a),e.appendChild(t);const r=e.querySelector(".add-schedule-prompt");r&&(r.style.display="none")}))}))}}class v{constructor(n,e,t){this.id=Date.now(),this.title=n,this.detail=e,this.color=t}}const S=new class{constructor(){this.stickyList=this.loadStickies()||[]}addSticky(n,e,t){let a=new v(n,e,t);this.stickyList.push(a),this.saveStickies()}getStickyList(){return this.stickyList}deleteSticky(n){this.stickyList=this.stickyList.filter((e=>e.id!==n)),this.saveStickies()}saveStickies(){localStorage.setItem("stickyList",JSON.stringify(this.stickyList))}loadStickies(){const n=localStorage.getItem("stickyList");return n?JSON.parse(n).map((n=>new v(n.title,n.detail,n.color))):[]}};function w(){const n=document.querySelector(".content-container");n.innerHTML="",n.classList.add("sticky-list-container"),S.getStickyList().forEach((e=>{const t=function(n){const e=document.createElement("div"),t=document.createElement("h3"),a=document.createElement("p");t.innerText=n.title,a.innerText=n.detail,e.classList.add("sticky-element"),e.style.backgroundColor=n.color;const o=y();return o.addEventListener("click",(()=>{S.deleteSticky(n.id),w()})),e.appendChild(t),e.appendChild(a),e.appendChild(o),e}(e);n.appendChild(t)}))}function L(){const n=document.querySelector(".user-content"),e=document.createElement("h1");e.classList.add("content-title");const t=document.createElement("div");t.classList.add("content-container"),e.innerText="Sticky Wall",n.innerHTML="",n.append(e,t),w()}document.querySelector(".user-icon").src=g,function(){const n=document.querySelector(".add-task"),e=document.querySelector(".task-modal"),t=e.querySelector(".close-button");n.addEventListener("click",(()=>{e.style.display="block"})),t.addEventListener("click",(()=>{e.style.display="none"})),document.querySelector("#addTaskForm").addEventListener("submit",(n=>{n.preventDefault();const t=document.querySelector("#taskName").value,a=document.querySelector("#taskTime").value;x.addTask(t,a),document.querySelector("#taskName").value="",document.querySelector("#taskTime").value="",e.style.display="none",k()}))}(),function(){const n=document.querySelector(".add-sticky"),e=document.querySelector(".sticky-modal"),t=e.querySelector(".close-button");n.addEventListener("click",(()=>{e.style.display="block"})),t.addEventListener("click",(()=>{e.style.display="none"}));const a=document.querySelector("#stickyColorPicker").querySelectorAll(".color-option"),o=document.querySelector("#stickyColor");a.forEach((n=>{n.addEventListener("click",(()=>{const e=n.getAttribute("data-color");o.value=e,a.forEach((n=>n.classList.remove("selected"))),n.classList.add("selected")}))})),document.querySelector("#addStickyForm").addEventListener("submit",(n=>{n.preventDefault();const t=document.querySelector("#stickyName").value,o=document.querySelector("#stickyDetail").value,r=document.querySelector("#stickyColor").value;S.addSticky(t,o,r),document.querySelector("#stickyName").value="",document.querySelector("#stickyDetail").value="",document.querySelector("#stickyColor").value="",a.forEach((n=>n.classList.remove("selected"))),a[0].classList.add("selected"),e.style.display="none",L()}))}(),L();const T=document.querySelector(".user-today"),q=document.querySelector(".user-calendar"),Y=document.querySelector(".user-sticky-wall");T.addEventListener("click",(()=>{k()})),q.addEventListener("click",(()=>{!function(){const n=document.querySelector(".user-content"),e=document.createElement("h1");e.classList.add("content-title");const t=document.createElement("div");t.classList.add("content-container");const a=document.createElement("h2"),o=new B(2024,6),r=["January","February","March","April","May","June","July","August","September","October","November","December"][o.month];a.innerText=`${r} ${o.year}`,e.innerText="Calendar",n.innerHTML="",n.append(e,a,t),o.generateCalendar()}()})),Y.addEventListener("click",(()=>{L()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,